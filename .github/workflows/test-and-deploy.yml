name: API and Performance Testing CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # Шаг: Установка JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Шаг: Кэширование зависимостей Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Шаг: Кэширование Allure CLI
      - name: Cache Allure CLI
        uses: actions/cache@v3
        with:
          path: /opt/allure
          key: ${{ runner.os }}-allure-2.19.0
          restore-keys: |
            ${{ runner.os }}-allure-

      # Шаг: Установка Allure CLI (если нет в кэше)
      - name: Install Allure CLI
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.19.0/allure-2.19.0.zip
          unzip allure-2.19.0.zip -d /opt/allure
          sudo ln -s /opt/allure/allure-2.19.0/bin/allure /usr/bin/allure

      # Шаг: Прогон Cucumber тестов
      - name: Run Cucumber tests
        run: mvn clean verify

      # Шаг: Прогон Gatling тестов
      - name: Run Gatling tests
        run: mvn gatling:test

      # Шаг: Генерация Allure-репорта
      - name: Generate Allure report
        run: |
          allure generate target/allure-results -o reports/cucumber

      # Шаг: Подготовка index.html
      - name: Prepare reports index
        run: |
          mkdir -p reports
          echo "<!DOCTYPE html>" > reports/index.html
          echo "<html><head><title>Test Reports</title></head><body>" >> reports/index.html
          echo "<h1>Test Reports</h1><ul>" >> reports/index.html
          echo "<li><a href=\"cucumber/index.html\">Cucumber Report</a></li>" >> reports/index.html
          GATLING_REPORT=$(find target/gatling -name "index.html" | head -n 1)
          echo "<li><a href=\"gatling/$(basename $(dirname $GATLING_REPORT))/index.html\">Gatling Report</a></li>" >> reports/index.html
          echo "</ul></body></html>" >> reports/index.html

      # Шаг: Деплой на GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: reports
